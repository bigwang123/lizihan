<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        spring中的依赖注入
           dependecy Injection
           IOC的作用：
                削减程序间的依赖关系
           依赖关系的管理以后都交给了spring来维护
           在当前类中需要用到其他类的对象，由spring为我们提供，我们只需要在配置文件中说明
           依赖关系的维护：
                就称之为：依赖注入
                        能注入的有三类
                        基本类型和string
                        其他bean类型（在配置文件中或者注释配置过的bean）
                        复杂类型/集合类型
                 注入方式有三种：
                   1： 使用构造函数提供
                   2： 使用set方法提供
                   3： 使用注解提供
    -->

    <!--构造函数注入
        使用标签：constructor
        标签出现的位置，bean标签内部
        标签中的属性
         type:用于指定要注入的数据类型，改数据类型也是构造函数中某一参数的类型
         index:用于指定要注入的数据给构造函数中指定的索引位置的参数赋值，索引位置从0开始
         name:用于指定给构造函数中指定名称的参数赋值    常用的
         -======================以上三个用于指定给构造函数中那个参数赋值===========================-
         value: 用于提供给基本类型和string类型
         ref:用于指定其他bean类型数据，他指的就是在spring咋IOC核心容器中出现过的bean对象

         优势：在获取bean对象时，注入数据是必须的操作，否则对象无法创建成功
         弊端：改变了bean对象实例化方式，使我们在创建对象时如果用不到这些数据，也必须提供。
    -->
    <bean id="accountService" class="com.cblue.service.impl.AccountServiceImpl" >
        <constructor-arg name="name" value="test"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="birthday" value="1996-11-06"></constructor-arg>
    </bean>


    <!--set方法注入
        涉及的标签：property
        出现的位置，bean标签的内部
        标签的属性：
         name:用于指定注入时所调用的set方法*****
         value: 用于提供给基本类型和string类型
         ref:用于指定其他bean类型数据，他指的就是在spring咋IOC核心容器中出现过的bean对象

         优势：创建对象时没有明确的限制，可以直接使用默认的构造函数
          弊端：如果有某个成员必须有值，则获取对象时set方法没有执行。
    -->

    <bean id="accountService2" class="com.cblue.service.impl.AccountServiceImpl2" >
        <property name="name" value="hah"></property>
        <property name="age" value="12"></property>
        <property name="birthday" value="1996-11-06"></property>
    </bean>

    <!--复杂类型注入/集合类型注入
        用于给list结构注入的标签有 list、Array、Set
        用户Map结构集合注入的标签有 map、props
        结构相同，标签可以互换
    -->
    <bean id="accountService3" class="com.cblue.service.impl.AccountServiceImpl3">
        <property name="myStrs">
            <array>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </array>
        </property>

        <property name="myList">
        <list>
            <value>AAA</value>
            <value>BBB</value>
            <value>CCC</value>
        </list>
    </property>

        <property name="mySet">
            <set>
                <value>AAA</value>
                <value>BBB</value>
                <value>CCC</value>
            </set>
        </property>

        <property name="myMap">
            <map>
                <entry key="AAA" value="aaa"></entry>
                <entry key="1">
                    <value>cc</value>
                </entry>
            </map>
        </property>

        <property name="myProps">
            <props>
                <prop key="testA">AAA</prop>
                <prop key="testB">BBB</prop>
            </props>
        </property>

    </bean>

</beans>